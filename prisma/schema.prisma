generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id(map: "PK_User") @default(autoincrement())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
}

model Account {
  id                Int     @id(map: "PK_Account") @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.NVarChar(150)
  access_token      String? @db.NVarChar(150)
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.NVarChar(150)
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model app_version {
  id   BigInt  @id(map: "PK_app_version") @default(autoincrement())
  type String? @db.NVarChar(50)
  ver  String? @db.NVarChar(50)
  path String? @db.NVarChar(150)
  lf   String? @db.NVarChar(50)
}

model clients {
  serial_no   String?  @db.NVarChar(150)
  url         String?  @db.NVarChar(150)
  shchoolname String?  @db.NVarChar(150)
  schoolcode  String?  @db.NVarChar(150)
  instime     String?  @db.NVarChar(150)
  date_       String?  @db.NVarChar(150)
  time_       String?  @db.NVarChar(150)
  teamid      String?  @db.NVarChar(150)
  ipstatic    String?  @db.NVarChar(150)
  winuser     String?  @db.NVarChar(150)
  winpass     String?  @db.NVarChar(150)
  iplocal     String?  @db.NVarChar(150)
  dolati      String?  @db.NVarChar(150)
  jadid       String?  @db.NVarChar(150)
  shahrestan  String?  @db.NVarChar(150)
  maghta      String?  @db.NVarChar(150)
  modir       String?  @db.NVarChar(150)
  mobmodir    String?  @db.NVarChar(150)
  sabet       String?  @db.NVarChar(150)
  tozihat     String?  @db.NVarChar(150)
  adres       String?  @db.NVarChar(150)
  nameasli    String?  @db.NVarChar(150)
  active      Boolean?
  used        Boolean?
  fanmob      String?  @db.NVarChar(50)
  domain      String?  @db.NVarChar(50)
  ip          String?  @db.NVarChar(50)
  resid       BigInt?
  id          BigInt   @id(map: "PK_clients") @default(autoincrement())
  t_moalem    BigInt?  @map("_t_moalem")
  t_danesh    BigInt?  @map("_t_danesh")
  t_class     BigInt?  @map("_t_class")
  t_hozor     BigInt?  @map("_t_hozor")
  t_soal      BigInt?  @map("_t_soal")
  t_azmoon    BigInt?  @map("_t_azmoon")
}

model coursename {
  id         BigInt  @id(map: "PK_coursename") @default(autoincrement())
  coursename String? @db.NVarChar(150)
  coursecode BigInt?
  maghta     BigInt?
  paye       BigInt?
}

model coursename_fasl {
  id         BigInt  @id(map: "PK_coursename_fasl") @default(autoincrement())
  coursecode BigInt?
  fasl       BigInt?
  caption    String? @db.NVarChar(150)
}

model vclassSch {
  id          BigInt  @id(map: "PK_vclassSch_1") @default(autoincrement())
  aztime      String? @db.NVarChar(50)
  tatime      String? @db.NVarChar(50)
  date_       String? @db.NVarChar(50)
  schoolcode  BigInt?
  schoolname  String? @db.NVarChar(50)
  classname   String? @db.NVarChar(250)
  teachercode String? @db.NVarChar(Max)
  teachername String? @db.NVarChar(Max)
  classcount  BigInt?
  hashid      String? @db.NVarChar(250)
  clsurl      String? @db.NVarChar(500)
  classcountv BigInt?
  serverid    BigInt?
  vclass      String? @db.NVarChar(50)

  @@index([aztime, date_], map: "_dta_index_vclassSch_29_341576255__K2_K4_1_13")
  @@index([schoolcode], map: "NonClusteredIndex-20200409-170603")
  @@index([aztime, date_, schoolcode], map: "NonClusteredIndex-20200409-170621")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model vclassSch1 {
  id          BigInt  @default(autoincrement())
  aztime      String? @db.NVarChar(50)
  tatime      String? @db.NVarChar(50)
  date_       String? @db.NVarChar(50)
  schoolcode  BigInt?
  schoolname  String? @db.NVarChar(50)
  classname   String? @db.NVarChar(50)
  teachercode String? @db.NVarChar(50)
  teachername String? @db.NVarChar(50)
  classcount  BigInt?
  hashid      String? @db.NVarChar(250)
  clsurl      String? @db.NVarChar(500)
  classcountv BigInt?
  serverid    BigInt?

  @@ignore
}

model webinar_school {
  id          BigInt  @id(map: "PK_webinar_school") @default(autoincrement())
  schoolcode  BigInt?
  capacity    BigInt?
  type        String? @db.NVarChar(50)
  limit       Int?
  sarresid    String? @db.NVarChar(50)
  webinarType String? @db.NVarChar(50)
  tel         String? @db.NVarChar(50)
  tozihat     String? @db.NVarChar(150)
  name        String? @db.NVarChar(250)
  saveactive  String? @db.NVarChar(50)
}

model webinar_server {
  id         BigInt  @id(map: "PK_webinar_server")
  servername String? @db.NVarChar(50)
  adres      String? @db.NVarChar(150)
  capacity   BigInt?
  salt       String? @db.NVarChar(150)
  active     BigInt?
  idd        BigInt  @default(autoincrement())
  lnk        String? @db.NVarChar(350)
}

model webinar_setting {
  id               BigInt  @id(map: "PK_webinar_setting") @default(autoincrement())
  default_capacity BigInt?
}

model maghtatbl {
  id         String       @unique @db.NVarChar(50)
  name       String       @db.NVarChar(50)
  users_mahd users_mahd[]
}

model users_mahd {
  id                 BigInt     @id(map: "PK_users_mahd") @default(autoincrement())
  mahd_name          String?    @db.NVarChar(50)
  name               String?    @db.NVarChar(50)
  en_name            String?    @db.NVarChar(50)
  username           BigInt?
  pass               String?    @db.NVarChar(50)
  active             Boolean?
  codemeli           String?    @db.NVarChar(50)
  mob                String?    @db.NVarChar(50)
  rooztavalod        String?    @db.NVarChar(50)
  mahtavalod         String?    @db.NVarChar(50)
  saltavalod         String?    @db.NVarChar(50)
  tell               String?    @db.NVarChar(50)
  family             String?    @db.NVarChar(50)
  shomareshenasnameh String?    @db.NVarChar(50)
  meli_code          String?    @db.NVarChar(50)
  per_code           String?    @db.NVarChar(50)
  active_code        String?    @db.NVarChar(50)
  wsuser             String?    @db.NVarChar(50)
  wspass             String?    @db.NVarChar(50)
  sms_number         String?    @db.NVarChar(50)
  sms_active         Boolean?
  shahrirostayi      BigInt?
  mantaghe           BigInt?
  zarfiat            String?    @db.NVarChar(50)
  upload_size        String?    @db.NVarChar(50)
  ParentID           BigInt?
  tedad              BigInt?
  tedadzir           BigInt?
  domain             String?    @db.NVarChar(Max)
  type               String?    @db.NVarChar(50)
  them_id            BigInt?
  date_shoro         String?    @db.NChar(10)
  date_payan         String?    @db.NChar(10)
  school_code        String?    @db.NVarChar(50)
  ramz_update        String?    @db.NVarChar(50)
  maghta             String?    @db.NVarChar(50)
  maghtatbl          maghtatbl? @relation(fields: [maghta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_users_mahd_maghtatblww")

  creator       BigInt?
  dbserver      BigInt?
  staticip      String?      @db.NVarChar(50)
  localip       String?      @db.NVarChar(50)
  maccess       Boolean?
  alias1        String?      @db.NVarChar(50)
  alias2        String?      @db.NVarChar(50)
  alias3        String?      @db.NVarChar(50)
  color         String?      @db.NVarChar(50)
  lic           String?      @db.NVarChar(50)
  ip            String?      @db.NVarChar(50)
  domdom        String?      @db.NVarChar(50)
  pishdabestani String?      @db.NVarChar(150)
  cleanbank     String?      @db.NVarChar(50)
  vclass        String?      @db.NVarChar(50)
  adobeadress   String?      @db.NVarChar(50)
  magh          BigInt?
  maghtaValue   maghtaValue? @relation(fields: [magh], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_users_mahd_maghtaValue")
}

model maghtaValue {
  id   BigInt  @id(map: "PK_maghtaValue")
  name String? @db.NVarChar(50)

  users_mahd users_mahd[]
}
